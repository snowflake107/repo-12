name: Dev builds

on:
  push:
    branches:
      - ttd-main
      - 'release-v[0-9]+.[0-9]+'

env:
  SIDECAR_IMAGE: "ghcr.io/thetradedesk/tailing-sidecar"
  LATEST_TAG: "ttd-main"

jobs:
  build-fluentbit-sidecar:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Extract tag
        id: extract_tag
        run: echo "tag=$(echo $(git describe --tags --always))" >> $GITHUB_OUTPUT
      - name: Print container tag
        run: echo "Running dev build for ${{ steps.extract_tag.outputs.tag }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push tailing sidecar multiplatform image
        run: make build-push-multiplatform TAG=${{ env.SIDECAR_IMAGE }}:${{ steps.extract_tag.outputs.tag }}
        working-directory: ./sidecar/fluentbit
      - name: Build and push tailing sidecar ubi image
        run: make build-push-ubi TAG=${{ env.SIDECAR_IMAGE }}:${{ steps.extract_tag.outputs.tag }}
        working-directory: ./sidecar/fluentbit
      - name: Push tailing sidecar image with latest tag
        run: make build-push-multiplatform TAG=${{ env.SIDECAR_IMAGE }}:${{ env.LATEST_TAG }}
        working-directory: ./sidecar/fluentbit
      - name: Push tailing sidecar ubi image with latest tag
        run: make build-push-ubi TAG=${{ env.SIDECAR_IMAGE }}:${{ env.LATEST_TAG }}
        working-directory: ./sidecar/fluentbit


  build-otelcol-sidecar:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache-dependency-path: |
            sidecar/otelcol/.otelcol-builder.yaml
            sidecar/otelcol/.goreleaser.yaml
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push otelcol sidecar image
        run: |
          make install-builder
          make release-dev
        working-directory: ./sidecar/otelcol
